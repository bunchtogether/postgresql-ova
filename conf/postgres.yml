scope: postgresql
namespace: /postgres/
name: postgresql

restapi:
  listen: 0.0.0.0:8008
  connect_address: 0.0.0.0:8008
  # certfile: /etc/ssl/certs/ssl-cert-snakeoil.pem
  # keyfile: /etc/ssl/private/ssl-cert-snakeoil.key
  # authentication:
  #   username: patrini
  #   password: xayohgEVN1qcKQ3M

# ctl:
#   insecure: false # Allow connections to SSL sites without certs

etcd:
  host: 0.0.0.0:2379

bootstrap:
  dcs:
    ttl: 30
    loop_wait: 10
    retry_timeout: 10
    maximum_lag_on_failover: 1048576
    master_start_timeout: 300
    postgresql:
      use_pg_rewind: true
      use_slots: true
      parameters:
#        wal_level: hot_standby
#        hot_standby: "on"
#        wal_keep_segments: 8
#        max_wal_senders: 10
#        max_replication_slots: 10
#        wal_log_hints: "on"
#        archive_mode: "on"
#        archive_timeout: 1800s
#        archive_command: mkdir -p ../wal_archive && test ! -f ../wal_archive/%f && cp %p ../wal_archive/%f
#      recovery_conf:
#        restore_command: cp ../wal_archive/%f %p

  initdb:  # Note: It needs to be a list (some options need values, others are switches)
  - encoding: UTF8
  - locale: en_US.UTF-8
  - data-checksums

  pg_hba:  # Add following lines to pg_hba.conf after running 'initdb'
  - host replication replicator 0.0.0.0/0 md5 # Change 0.0.0.0/0 to local IP Address
  - host all all 0.0.0.0/0 md5

  # Additional script to be launched after initial cluster creation (will be passed the connection URL as parameter)
  post_init: /patroni/post_setup_cluster.sh

  # Some additional users users which needs to be created after initializing new cluster
  users:
    admin:
      password: F9K1F2pbP4nJtQvR
      options:
        - createrole
        - createdb

postgresql:
  listen: 0.0.0.0:5432
  connect_address: 0.0.0.0:5432
  data_dir: /data/postgresql
  bin_dir: /usr/lib/postgresql/10/bin
  # config_dir: /patroni/postgresql
  pgpass: /patroni/pgpass
  authentication:
    replication:
      username: replicator
      password: JLKNk2cg1Pppqu5J
    superuser:
      username: postgres
      password: password
  parameters:
    unix_socket_directories: '.'

tags:
    nofailover: false
    noloadbalance: false
    clonefrom: false
    nosync: false